[{"C:\\Users\\rbarr\\projects\\quizme\\src\\index.js":"1","C:\\Users\\rbarr\\projects\\quizme\\src\\App.js":"2","C:\\Users\\rbarr\\projects\\quizme\\src\\reportWebVitals.js":"3","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Dashboard.jsx":"4","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Quiz.jsx":"5","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\QuizCategory.jsx":"6","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Admin.jsx":"7","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Create.jsx":"8","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Row.jsx":"9","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Register.jsx":"10","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Login.jsx":"11","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Question.jsx":"12","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Answer.jsx":"13","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Check.jsx":"14","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Dashboard\\Results.jsx":"15","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Navigation\\Nav.jsx":"16","C:\\Users\\rbarr\\projects\\quizme\\src\\Services\\auth-api-service.js":"17","C:\\Users\\rbarr\\projects\\quizme\\src\\config.js":"18","C:\\Users\\rbarr\\projects\\quizme\\src\\Services\\token-service.js":"19"},{"size":544,"mtime":1610419151542,"results":"20","hashOfConfig":"21"},{"size":1415,"mtime":1612177538658,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":718,"mtime":1611251946520,"results":"24","hashOfConfig":"21"},{"size":670,"mtime":1611251944733,"results":"25","hashOfConfig":"21"},{"size":618,"mtime":1610647051766,"results":"26","hashOfConfig":"21"},{"size":1572,"mtime":1611000802049,"results":"27","hashOfConfig":"21"},{"size":810,"mtime":1610674604705,"results":"28","hashOfConfig":"21"},{"size":270,"mtime":1611002342467,"results":"29","hashOfConfig":"21"},{"size":2313,"mtime":1611249738841,"results":"30","hashOfConfig":"21"},{"size":1615,"mtime":1612177583018,"results":"31","hashOfConfig":"21"},{"size":1088,"mtime":1611251950614,"results":"32","hashOfConfig":"21"},{"size":718,"mtime":1611251863111,"results":"33","hashOfConfig":"21"},{"size":301,"mtime":1611251891649,"results":"34","hashOfConfig":"21"},{"size":408,"mtime":1611251909365,"results":"35","hashOfConfig":"21"},{"size":994,"mtime":1612177072237,"results":"36","hashOfConfig":"21"},{"size":1202,"mtime":1612157174691,"results":"37","hashOfConfig":"21"},{"size":197,"mtime":1612157632916,"results":"38","hashOfConfig":"21"},{"size":1114,"mtime":1612157138569,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ymqpu9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rbarr\\projects\\quizme\\src\\index.js",[],["80","81"],"C:\\Users\\rbarr\\projects\\quizme\\src\\App.js",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\reportWebVitals.js",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Dashboard.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Quiz.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\QuizCategory.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Admin.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Create.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Row.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Register.jsx",["82","83"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n// import config from '../config';\r\n\r\nexport default function RegisterMain() {\r\n  const history = useHistory();\r\n  const [errorMessage, setError] = useState(null);\r\n  const [confPass, setConfPass] = useState('');\r\n  const [pass, setPass] = useState('');\r\n\r\n  function confPassEntered(e){\r\n    setConfPass(e.target.value);\r\n  }\r\n\r\n  function passwordEntered(e){\r\n    setPass(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    if(pass !== confPass){\r\n      return;\r\n    }\r\n\r\n    const { username, password } = e.target;\r\n    const user = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    setError(null);\r\n\r\n    // fetch(`${config.API_ENDPOINT}/users`, {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'content-type': 'application/json',\r\n    //   },\r\n    //   body: JSON.stringify(user),\r\n    // })\r\n    //   .then(res => \r\n    //     (!res.ok)\r\n    //       ? res.json().then(e=> Promise.reject(e))\r\n    //       : res.json()\r\n    //   )\r\n    //   .then(() => \r\n    //     history.push(\r\n    //       {\r\n    //         pathname: 'login'\r\n    //       }\r\n    //     )\r\n    //   )\r\n    //   .catch(res => setError(res.error));\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={e => handleSubmit(e)} className='Register_Form'>\r\n        <div role='alert'>\r\n          {errorMessage && <p className='red'>{errorMessage}</p>}\r\n        </div>\r\n\r\n        <h2>Welcome</h2>\r\n        <p>Please register to continue <br/> All fields required</p>\r\n        <label htmlFor='username'>Username </label>\r\n        <br/>\r\n        <input id='username' type='text' placeholder='User1'/>\r\n        <br/>\r\n        <label htmlFor='password'>Password </label>\r\n        <br/>\r\n        <input id='password' type='password' placeholder='Password@1' onChange={e=>passwordEntered(e)}/>\r\n        <br/>\r\n        <label htmlFor='conf_password'>Confirm Password </label>\r\n        <br/>\r\n        <input id='conf_password' type='password' placeholder='Password@1' onChange={e=>confPassEntered(e)}/>\r\n        {!(confPass===pass) && <><br/><span>*Passwords do not match*</span></>}\r\n        <br/>\r\n        <button type='submit'>Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Login.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Question.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Answer.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Check.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Dashboard\\Results.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Navigation\\Nav.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Services\\auth-api-service.js",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\config.js",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Services\\token-service.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":6,"column":9,"nodeType":"90","messageId":"91","endLine":6,"endColumn":16},{"ruleId":"88","severity":1,"message":"92","line":27,"column":11,"nodeType":"90","messageId":"91","endLine":27,"endColumn":15},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]