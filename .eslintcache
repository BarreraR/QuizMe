[{"C:\\Users\\rbarr\\projects\\quizme\\src\\index.js":"1","C:\\Users\\rbarr\\projects\\quizme\\src\\App.js":"2","C:\\Users\\rbarr\\projects\\quizme\\src\\reportWebVitals.js":"3","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Dashboard.jsx":"4","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Quiz.jsx":"5","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\QuizCategory.jsx":"6","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Admin.jsx":"7","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Create.jsx":"8","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Row.jsx":"9","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Register.jsx":"10","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Login.jsx":"11","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Question.jsx":"12","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Answer.jsx":"13","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Check.jsx":"14","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Dashboard\\Results.jsx":"15","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Navigation\\Nav.jsx":"16"},{"size":544,"mtime":1610419151542,"results":"17","hashOfConfig":"18"},{"size":1042,"mtime":1612173253928,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":718,"mtime":1611251946520,"results":"21","hashOfConfig":"18"},{"size":670,"mtime":1611251944733,"results":"22","hashOfConfig":"18"},{"size":618,"mtime":1610647051766,"results":"23","hashOfConfig":"18"},{"size":1572,"mtime":1611000802049,"results":"24","hashOfConfig":"18"},{"size":810,"mtime":1610674604705,"results":"25","hashOfConfig":"18"},{"size":270,"mtime":1611002342467,"results":"26","hashOfConfig":"18"},{"size":2313,"mtime":1611249738841,"results":"27","hashOfConfig":"18"},{"size":1993,"mtime":1611249867863,"results":"28","hashOfConfig":"18"},{"size":1088,"mtime":1611251950614,"results":"29","hashOfConfig":"18"},{"size":718,"mtime":1611251863111,"results":"30","hashOfConfig":"18"},{"size":301,"mtime":1611251891649,"results":"31","hashOfConfig":"18"},{"size":408,"mtime":1611251909365,"results":"32","hashOfConfig":"18"},{"size":578,"mtime":1611251923685,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ymqpu9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\rbarr\\projects\\quizme\\src\\index.js",[],["69","70"],"C:\\Users\\rbarr\\projects\\quizme\\src\\App.js",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\reportWebVitals.js",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Dashboard.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Quiz.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\QuizCategory.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Admin.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Create.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\AdminActions\\Row.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Register.jsx",["71","72"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n// import config from '../config';\r\n\r\nexport default function RegisterMain() {\r\n  const history = useHistory();\r\n  const [errorMessage, setError] = useState(null);\r\n  const [confPass, setConfPass] = useState('');\r\n  const [pass, setPass] = useState('');\r\n\r\n  function confPassEntered(e){\r\n    setConfPass(e.target.value);\r\n  }\r\n\r\n  function passwordEntered(e){\r\n    setPass(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    if(pass !== confPass){\r\n      return;\r\n    }\r\n\r\n    const { username, password } = e.target;\r\n    const user = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    setError(null);\r\n\r\n    // fetch(`${config.API_ENDPOINT}/users`, {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'content-type': 'application/json',\r\n    //   },\r\n    //   body: JSON.stringify(user),\r\n    // })\r\n    //   .then(res => \r\n    //     (!res.ok)\r\n    //       ? res.json().then(e=> Promise.reject(e))\r\n    //       : res.json()\r\n    //   )\r\n    //   .then(() => \r\n    //     history.push(\r\n    //       {\r\n    //         pathname: 'login'\r\n    //       }\r\n    //     )\r\n    //   )\r\n    //   .catch(res => setError(res.error));\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={e => handleSubmit(e)} className='Register_Form'>\r\n        <div role='alert'>\r\n          {errorMessage && <p className='red'>{errorMessage}</p>}\r\n        </div>\r\n\r\n        <h2>Welcome</h2>\r\n        <p>Please register to continue <br/> All fields required</p>\r\n        <label htmlFor='username'>Username </label>\r\n        <br/>\r\n        <input id='username' type='text' placeholder='User1'/>\r\n        <br/>\r\n        <label htmlFor='password'>Password </label>\r\n        <br/>\r\n        <input id='password' type='password' placeholder='Password@1' onChange={e=>passwordEntered(e)}/>\r\n        <br/>\r\n        <label htmlFor='conf_password'>Confirm Password </label>\r\n        <br/>\r\n        <input id='conf_password' type='password' placeholder='Password@1' onChange={e=>confPassEntered(e)}/>\r\n        {!(confPass===pass) && <><br/><span>*Passwords do not match*</span></>}\r\n        <br/>\r\n        <button type='submit'>Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","C:\\Users\\rbarr\\projects\\quizme\\src\\Routes\\Login.jsx",["73","74"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import config from \"../config\";\r\n// import TokenService from \"../services/token-service\";\r\n\r\nexport default function LoginMain(props) {\r\n  const history = useHistory();\r\n  const [errorMessage, setError] = useState(null);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    setError(null);\r\n\r\n    const { username, password } = e.target;\r\n\r\n    const user = { username: username.value, password: password.value };\r\n\r\n    // fetch(`${config.API_ENDPOINT}/auth/login`, {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     \"content-type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify(user),\r\n    // })\r\n    //   .then((res) => {\r\n    //     if(!res.ok) \r\n    //       return res.json().then((e) => Promise.reject(e)); \r\n    //     else \r\n    //       return res.json();\r\n    //   })\r\n    //   .then((res) => {\r\n    //     username.value = \"\";\r\n    //     password.value = \"\";\r\n    //     TokenService.saveAuthToken(res.authToken);\r\n    //     props.loginUser();\r\n    //     history.push(\r\n    //       {\r\n    //         pathname: 'home'\r\n    //       }\r\n    //     );\r\n    //   })\r\n    //   .catch((res) => {\r\n    //     username.value = \"\";\r\n    //     password.value = \"\";\r\n    //     setError(res.error);\r\n    //   });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => handleSubmit(e)} className=\"Login_Form\">\r\n        <h2>Welcome</h2>\r\n        <p>Please login to continue</p>\r\n\r\n        <div role='alert'>\r\n          {errorMessage && <p className='red'>{errorMessage}</p>}\r\n        </div>\r\n\r\n        <label htmlFor=\"username\">Username </label>\r\n        <input id=\"username\" type=\"text\" placeholder=\"User1\" />\r\n        <br />\r\n        <label htmlFor=\"password\">Password </label>\r\n        <input id=\"password\" type=\"password\" placeholder=\"Password@1\" />\r\n        <br />\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Question.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Answer.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Quiz\\Check.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Dashboard\\Results.jsx",[],"C:\\Users\\rbarr\\projects\\quizme\\src\\Components\\Navigation\\Nav.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":6,"column":9,"nodeType":"81","messageId":"82","endLine":6,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":27,"column":11,"nodeType":"81","messageId":"82","endLine":27,"endColumn":15},{"ruleId":"79","severity":1,"message":"80","line":7,"column":9,"nodeType":"81","messageId":"82","endLine":7,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":17,"column":11,"nodeType":"81","messageId":"82","endLine":17,"endColumn":15},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]